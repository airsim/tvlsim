/*! 
\page test Test Rules

This section describes how the functionality of the DSim library
should be verified. In the \c `test/dsim' subdirectory, test source files
are provided. All functionality should be tested using these test
source files.


\section test_source The Test Source Files

Each new DSim module/class should be accompanied with a test source file.
The test source file is an implementation in C++ that tests the functionality
of a function/class or a group of functions/classes called test suites.
The test source file should test relevant parameter settings and input/output
relations to guarantee correct functionality of the corresponding
classes/functions. The test source files should be maintained using version
control and updated whenever new functionality is added to the DSim library.

The test source file should print relevant data to a standard output that
can be used to verify the functionality. All relevant parameter settings
should be tested.

The test source file should be placed in the \c `test/dsim' subdirectory and
should have a name ending with <tt>`TestSuite.cpp'</tt>.


\section reference_file The Reference File

Consider a test source file named <tt>`YieldTestSuite.cpp'</tt>.
A reference file named <tt>`YieldTestSuite.ref'</tt> should accompany
the test source file. The reference file contains a reference printout
of the standard output generated when running the test program.
The reference file should be maintained using version control and
updated according to the test source file.


\section testing_using_make Testing DSim Library

One can compile and execute all test programs from
the \c `test/dsim' sub-directory by typing:
\verbatim 
% make check
\endverbatim
after successful compilation of the DSim library.

*/
